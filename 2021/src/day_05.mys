from os import TextFile

def get_input(filename: string) -> [Line]:
    lines: [Line] = []

    for line in TextFile(f"{__assets__}/day_05/{filename}").read().strip().split("\n"):
        mo = line.match(re"(\d+),(\d+) -> (\d+),(\d+)")
        lines.append((Line(i64(mo.group(1)),
                           i64(mo.group(2)),
                           i64(mo.group(3)),
                           i64(mo.group(4)))))

    return lines

class Line:
    x1: i64
    y1: i64
    x2: i64
    y2: i64

class Diagram:
    canvas: [[i64]]

    def __init__(self, x_max: i64, y_max: i64):
        self.canvas = []

        for _ in range(x_max + 1):
            self.canvas.append([0 for _ in range(y_max + 1)])

    def draw_line(self, line: Line):
        if line.x1 < line.x2:
            x_diff = 1
        elif line.x1 > line.x2:
            x_diff = -1
        else:
            x_diff = 0

        if line.y1 < line.y2:
            y_diff = 1
        elif line.y1 > line.y2:
            y_diff = -1
        else:
            y_diff = 0

        x = line.x1
        y = line.y1

        while True:
            self.canvas[x][y] += 1

            if x == line.x2 and y == line.y2:
                break

            x += x_diff
            y += y_diff

    def count_number_of_overlapping_lines(self) -> i64:
        number_of_overlapping_lines = 0

        for line in self.canvas:
            for value in line:
                if value > 1:
                    number_of_overlapping_lines += 1

        return number_of_overlapping_lines

def create_empty_diagram(lines: [Line]) -> Diagram:
    x_max = 0
    y_max = 0

    for line in lines:
        x_max = max(x_max, line.x1, line.x2)
        y_max = max(y_max, line.y1, line.y2)

    return Diagram(x_max, y_max)

def is_horizontal_or_vertical_line(line: Line) -> bool:
    return line.x1 == line.x2 or line.y1 == line.y2

def part_1(filename: string) -> i64:
    lines = get_input(filename)
    diagram = create_empty_diagram(lines)

    for line in lines:
        if is_horizontal_or_vertical_line(line):
            diagram.draw_line(line)

    return diagram.count_number_of_overlapping_lines()

def part_2(filename: string) -> i64:
    lines = get_input(filename)
    diagram = create_empty_diagram(lines)

    for line in lines:
        diagram.draw_line(line)

    return diagram.count_number_of_overlapping_lines()

def day_05():
    print(part_1("input.txt"))
    print(part_2("input.txt"))

@test
def test_all():
    assert part_1("example.txt") == 5
    assert part_2("example.txt") == 12
    assert part_1("input.txt") == 5145
    assert part_2("input.txt") == 16518
