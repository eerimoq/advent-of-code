from os import TextFile

def get_input(filename: string) -> ([i64], [[i64]]):
    lines = TextFile(f"{__assets__}/day_04/{filename}").read().strip().split("\n")
    numbers = [i64(number) for number in lines[0].split(',')]
    boards: [[i64]] = []
    board: [i64] = []

    for line in slice(lines, 2):
        if line == "":
            boards.append(board)
            board = []
        else:
            for number in line.strip().split():
                board.append(i64(number))

    boards.append(board)

    return numbers, boards

def has_bingo(marks: [bool]) -> bool:
    for i in range(5):
        if all(marks[5 * i:5 * i + 5]):
            return True

        if all(marks[i:25:5]):
            return True

    return False

def calc_unmarked_numbers(board: [i64], marks: [bool]) -> i64:
    unmarked_numbers_sum = 0

    for number, mark in zip(board, marks):
        if not mark:
            unmarked_numbers_sum += number

    return unmarked_numbers_sum

def mark_number(board: [i64], marks: [bool], number: i64):
    index = board.find(number)

    if index != -1:
        marks[index] = True

def part_1(filename: string) -> i64:
    numbers, boards = get_input(filename)
    marks = [[False for _ in range(25)] for _ in boards]

    for number in numbers:
        for board, mark in zip(boards, marks):
            mark_number(board, mark, number)

            if has_bingo(mark):
                return calc_unmarked_numbers(board, mark) * number

    raise UnreachableError("No bingo")

def part_2(filename: string) -> i64:
    numbers, boards = get_input(filename)
    boards_with_bingo: [i64] = []
    marks = [[False for _ in range(25)] for _ in boards]

    for number in numbers:
        for i, (board, mark) in enumerate(zip(boards, marks)):
            if i in boards_with_bingo:
                continue

            mark_number(board, mark, number)

            if has_bingo(mark):
                boards_with_bingo.append(i)

                if len(boards_with_bingo) == len(boards):
                    return calc_unmarked_numbers(board, mark) * number

    raise UnreachableError("No bingo")

def day_04():
    print(part_1("input.txt"))
    print(part_2("input.txt"))

@test
def test_all():
    assert part_1("example.txt") == 4512
    assert part_2("example.txt") == 1924
    assert part_1("input.txt") == 11536
    assert part_2("input.txt") == 1284
