from os import TextFile

def get_input(filename: string) -> [string]:
    items: [string] = []

    for line in TextFile(f"{__assets__}/day_10/{filename}").read().split("\n"):
        if line == "":
            continue

        items.append(line)

    return items

def part_1(filename: string) -> i64:
    items = get_input(filename)
    corrupted: [char] = []

    for line in items:
        stack: [char] = []

        for ch in line:
            if ch in "({[<":
                stack.append(ch)
            else:
                c = stack.pop()

                if c == '(' and ch != ')':
                    corrupted.append(ch)
                elif c == '{' and ch != '}':
                    corrupted.append(ch)
                elif c == '[' and ch != ']':
                    corrupted.append(ch)
                elif c == '<' and ch != '>':
                    corrupted.append(ch)

    score = 0

    for ch in corrupted:
        if ch == ')':
            score += 3
        elif ch == ']':
            score += 57
        elif ch == '}':
            score += 1197
        elif ch == '>':
            score += 25137

    return score

def is_corrupted_line(line: string) -> bool:
    stack: [char] = []

    for ch in line:
        if ch in "({[<":
            stack.append(ch)
        else:
            c = stack.pop()

            if c == '(' and ch != ')':
                return True
            elif c == '[' and ch != ']':
                return True
            elif c == '{' and ch != '}':
                return True
            elif c == '<' and ch != '>':
                return True

    return False

def part_2(filename: string) -> i64:
    items = get_input(filename)
    scores: [i64] = []

    for line in items:
        if not is_corrupted_line(line):
            stack: [char] = []

            for ch in line:
                if ch in "({[<":
                    stack.append(ch)
                else:
                    stack.pop()

            stack.reverse()
            score = 0

            for ch in stack:
                score *= 5

                if ch == '(':
                    score += 1
                elif ch == '[':
                    score += 2
                elif ch == '{':
                    score += 3
                elif ch == '<':
                    score += 4

            scores.append(score)

    scores.sort()

    return scores[len(scores) / 2]

def day_10():
    print(part_1("input.txt"))
    print(part_2("input.txt"))

@test
def test_all():
    assert part_1("example.txt") == 26397
    assert part_2("example.txt") == 288957
    assert part_1("input.txt") == 369105
    assert part_2("input.txt") == 3999363569
