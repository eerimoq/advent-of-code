from os import TextFile

def get_input(filename: string) -> [string]:
    items: [string] = []

    for line in TextFile(f"{__assets__}/day_10/{filename}").read().split("\n"):
        if line == "":
            continue

        items.append(line)

    return items

O2C: {char: char} = {
    '(': ')',
    '{': '}',
    '[': ']',
    '<': '>'
}

def part_1(filename: string) -> i64:
    items = get_input(filename)
    score = 0
    stack: [char] = []
    c2s = {
        ')': 3,
        ']': 57,
        '}': 1197,
        '>': 25137
    }

    for line in items:
        for ch in line:
            if ch in O2C:
                stack.append(O2C[ch])
            elif ch == stack[-1]:
                stack.pop()
            else:
                score += c2s[ch]
                break

    return score

def get_illegal_line_rest(line: string) -> [char]:
    stack: [char] = []

    for ch in line:
        if ch in O2C:
            stack.append(O2C[ch])
        elif ch == stack[-1]:
            stack.pop()
        else:
            return None

    return stack

def part_2(filename: string) -> i64:
    items = get_input(filename)
    scores: [i64] = []
    c2s = {
        ')': 1,
        ']': 2,
        '}': 3,
        '>': 4
    }

    for line in items:
        stack = get_illegal_line_rest(line)

        if stack is None:
            continue

        stack.reverse()
        score = 0

        for ch in stack:
            score *= 5
            score += c2s[ch]

        scores.append(score)

    scores.sort()

    return scores[len(scores) / 2]

def day_10():
    print(part_1("input.txt"))
    print(part_2("input.txt"))

@test
def test_all():
    assert part_1("example.txt") == 26397
    assert part_2("example.txt") == 288957
    assert part_1("input.txt") == 369105
    assert part_2("input.txt") == 3999363569
