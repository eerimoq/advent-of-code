from os.path import Path

class Map:
    rows: [string]
    height: i64
    width: i64

    func __init__(self):
        self.rows = Path(f"{__assets__}/day_03.txt").read_text().strip().split("\n")
        self.height = self.rows.length()
        self.width = self.rows[0].length()

    func get_tile(self, x: i64, y: i64) -> char:
        x = (x - 1) % self.width

        return self.rows[y - 1][x]

func calculate_tree_encounters(map: Map, dx: i64, dy: i64) -> i64:
    x, y = 1, 1
    encounters = 0

    while y <= map.height:
        tile = map.get_tile(x, y)

        if tile == '#':
            encounters += 1

        x += dx
        y += dy

    return encounters

func part_1(map: Map):
    print(calculate_tree_encounters(map, 3, 1))

func part_2(map: Map):
    slopes = [
        (1, 1),
        (3, 1),
        (5, 1),
        (7, 1),
        (1, 2)
    ]
    product = 1

    for encounter in [calculate_tree_encounters(map, dx, dy) for dx, dy in slopes]:
        product *= encounter

    print(product)

func day_03():
    map = Map()
    part_1(map)
    part_2(map)
