from os import TextFile

class Deck:
    cards: [i64]

    def __init__(self):
        self.cards = []

    def draw_card(self) -> i64:
        return self.cards.pop(0)

    def put_card_on_bottom(self, card: i64):
        self.cards.append(card)

    def number_of_cards(self) -> i64:
        return i64(len(self.cards))

def load_decks(text: string) -> [Deck]:
    decks: [Deck] = []

    for deck_text in text.split("\n\n"):
        deck = Deck()

        for line in deck_text.split("\n"):
            if line.is_digit():
                deck.put_card_on_bottom(i64(line))

        decks.append(deck)

    return decks

def calc_score(deck: Deck) -> i64:
    score = 0

    for i, card in enumerate(reversed(deck.cards), 1):
        score += i * card

    return score

def play(deck_1: Deck, deck_2: Deck) -> i64:
    while True:
        card_1 = deck_1.draw_card()
        card_2 = deck_2.draw_card()

        if card_1 > card_2:
            deck_1.put_card_on_bottom(card_1)
            deck_1.put_card_on_bottom(card_2)
        else:
            deck_2.put_card_on_bottom(card_2)
            deck_2.put_card_on_bottom(card_1)

        if deck_1.number_of_cards() == 0:
            return calc_score(deck_2)
        elif deck_2.number_of_cards() == 0:
            return calc_score(deck_1)

def part_1(deck_1: Deck, deck_2: Deck) -> i64:
    return play(deck_1, deck_2)

def day_22():
    decks = load_decks(TextFile("src/day_22.txt").read().strip())
    print(part_1(decks[0], decks[1]))

@test
def test_part_1():
    text = ("Player 1:\n"
            "9\n"
            "2\n"
            "6\n"
            "3\n"
            "1\n"
            "\n"
            "Player 2:\n"
            "5\n"
            "8\n"
            "4\n"
            "7\n"
            "10\n")
    decks = load_decks(text.strip())
    print(part_1(decks[0], decks[1]))
