from argparse import Parser
from os import TextFile
from json import decode
from json import String
from json import Value
from time import UtcDateTime

def calc_day_start_ts(day: u8) -> i64:
    day_start = UtcDateTime()
    day_start.year = 2021
    day_start.month = 12
    day_start.day = day
    day_start.hour = 5
    day_start.minute = 0
    day_start.second = 0

    return day_start.to_time_since_epoch().seconds

def main(argv: [string]):
    parser = Parser()
    parser.add_positional("api_json")
    parser.add_positional("day")
    args = parser.parse(argv)

    api_json = decode(TextFile(args.value_of("api_json")).read())
    day = args.value_of("day")
    day_start_ts = calc_day_start_ts(u8(day))

    for member_id, member in api_json.get("members").get_object():
        try:
            match member.get("name"):
                case String() as string:
                    name = string.get_string()
                case _:
                    name = f"(anonymous user #{member_id})"

            completion_day = member.get("completion_day_level").get(day)
            star_1_ts = completion_day.get("1").get("get_star_ts").get_integer()
            star_2_ts = completion_day.get("2").get("get_star_ts").get_integer()
            star_1_time = star_1_ts - day_start_ts
            star_2_time = star_2_ts - day_start_ts
            star_2_delta = star_2_time - star_1_time

            print(star_1_time, star_2_time, star_2_delta, name)
        except:
            pass
